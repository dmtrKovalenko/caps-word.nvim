*caps-word-docs.txt*       For Neovim >= 0.8.0       Last change: 2024 July 30

==============================================================================
Table of Contents                           *caps-word-docs-table-of-contents*

1. Caps Word for neovim                  |caps-word-docs-caps-word-for-neovim|
  - Features                    |caps-word-docs-caps-word-for-neovim-features|
  - Installation            |caps-word-docs-caps-word-for-neovim-installation|
  - Configuration          |caps-word-docs-caps-word-for-neovim-configuration|
  - Usage                          |caps-word-docs-caps-word-for-neovim-usage|
  - FAQ                              |caps-word-docs-caps-word-for-neovim-faq|
  - Self-promotion        |caps-word-docs-caps-word-for-neovim-self-promotion|
2. Links                                                |caps-word-docs-links|

==============================================================================
1. Caps Word for neovim                  *caps-word-docs-caps-word-for-neovim*

Adoption of QMK caps word feature <https://docs.qmk.fm/features/caps_word> for
neovim. Provides a better experience for typing SCREAMING_SNAKE_CASE words
automatically disables at the end of the word.













https://github.com/user-attachments/assets/be198aac-2c3a-4415-aff0-9f8913e45480


FEATURES                        *caps-word-docs-caps-word-for-neovim-features*

Automatically disables at the end of the word using |vim.o.iskeyword|

- Automatically disables on exiting insert mode
- Replaces "-" with "_" so you can type snake-case words instead


INSTALLATION                *caps-word-docs-caps-word-for-neovim-installation*

The plugin is optimized for lazy loading. You can use any plugin manager you
want.

lazy.nvim:

>lua
      {
        "dmtrKovalenko/caps-word.nvim",
        lazy = true,
        opts = {},
        keys = {
          {
            mode = { "i", "n" },
            "<C-s>",
            "<cmd>lua require('caps-word').toggle()<CR>",
          },
        },
      },
<


CONFIGURATION              *caps-word-docs-caps-word-for-neovim-configuration*

List of options you can use with default values:

>lua
    {
      -- Automatically changes `-` to `_` when caps word is activated
      auto_underscore_inject = true,
      -- Does not turn the caps mode off on number input
      enable_numbers_in_caps = true,
      -- Provide custom vim match regex for detecting end of the word (default is vim.o.iskeyword)
      match_word_string = nil,
    }
<


USAGE                              *caps-word-docs-caps-word-for-neovim-usage*

Simply use a keybinding to toggle the caps word mode, type your constant and
press `<space>`, or any other non-word character. The mode will be
automatically disabled and you can continue typing as usual.


FAQ                                  *caps-word-docs-caps-word-for-neovim-faq*


SHOULD I TRY IT IF I ALREADY USE QMK CAPS WORD? ~

No, if you absolutely like it, but I did because:

- QMK caps word does not know about your keybindings in insert mode and breaks them by changing the emitted keys
- it canâ€™t disable itself on insert leave, which is useful
- this plugin is buffer-local which helps when jumping between splits


SELF-PROMOTION            *caps-word-docs-caps-word-for-neovim-self-promotion*

If you like this little tool subscribe to my Twitter/X
<https://x.com/neogoose_btw> for more updates on my open source work.

==============================================================================
2. Links                                                *caps-word-docs-links*

1. *demo gif*: ./demo.gif

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
